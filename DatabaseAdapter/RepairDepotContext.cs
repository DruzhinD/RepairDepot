// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using DatabaseAdapter.Configurations;
using Microsoft.EntityFrameworkCore;

namespace DatabaseAdapter.Models;

public partial class RepairDepotContext : DbContext
{
    public RepairDepotContext(DbContextOptions<RepairDepotContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AwardOrder> AwardOrders { get; set; }

    public virtual DbSet<CompleteReport> CompleteReports { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<EmployeeRepairTask> EmployeeRepairTasks { get; set; }

    public virtual DbSet<ExternalRailway> ExternalRailways { get; set; }

    public virtual DbSet<Foreman> Foremen { get; set; }

    public virtual DbSet<InternalRailway> InternalRailways { get; set; }

    public virtual DbSet<QualityControl> QualityControls { get; set; }

    public virtual DbSet<Railway> Railways { get; set; }

    public virtual DbSet<RepairOrder> RepairOrders { get; set; }

    public virtual DbSet<RepairRequest> RepairRequests { get; set; }

    public virtual DbSet<RepairTask> RepairTasks { get; set; }

    public virtual DbSet<RepairType> RepairTypes { get; set; }

    public virtual DbSet<ServiceDirectorate> ServiceDirectorates { get; set; }

    public virtual DbSet<Wagon> Wagons { get; set; }

    public virtual DbSet<Worker> Workers { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.HasPostgresEnum("wagon_type", new[] { "купейный", "спальный", "плацкартный", "почтовый", "багажный" });

        modelBuilder.ApplyConfiguration(new WorkerConfiguration());
        modelBuilder.ApplyConfiguration(new WagonConfiguration());
        modelBuilder.ApplyConfiguration(new ServiceDirectorateConfiguration());
        modelBuilder.ApplyConfiguration(new RepairTypeConfiguration());
        modelBuilder.ApplyConfiguration(new RepairTaskConfiguration());
        modelBuilder.ApplyConfiguration(new RepairRequestConfiguration());
        modelBuilder.ApplyConfiguration(new RepairOrderConfiguration());
        modelBuilder.ApplyConfiguration(new RailwayConfiguration());
        modelBuilder.ApplyConfiguration(new QualityControlConfiguration());
        modelBuilder.ApplyConfiguration(new InternalRailwayConfiguration());
        modelBuilder.ApplyConfiguration(new ForemanConfiguration());
        modelBuilder.ApplyConfiguration(new ExternalRailwayConfiguration());
        modelBuilder.ApplyConfiguration(new EmployeeRepairTaskConfiguration());
        modelBuilder.ApplyConfiguration(new EmployeeConfiguration());
        modelBuilder.ApplyConfiguration(new CompleteReportConfiguration());
        modelBuilder.ApplyConfiguration(new AwardOrderConfiguration());


        base.OnModelCreating(modelBuilder);
    }
}